#+title: Introduction
#+author: Ray LeClair
#+date: <2024-07-01 Mon>

* Motivation

The NCBI Cell pilot seeks to demonstrate the feasibility of developing
a cell phenotype knowledgebase resource that captures knowledge about
cell phenotypes, exposes this knowledge for search and analysis by the
research community, and integrates the cell phenotype knowledge with
other sources of knowledge about diseases and drugs to enable
discovery of novel diagnostic biomarkers and therapeutic targets.

Two streams of knowledge are envisioned:

+ Single cell genomics data captured from existing data repositories
  (e.g., CZI CELLxGENE, NeMO) will be analyzed to produce information
  about cell type-specific marker genes and differential expression
  patterns

+ Open access peer-reviewed publications reporting results from single
  cell genomics experiments from PubMed Central (PMC) will be
  processed to extract information about cell type-specific marker
  genes and differential expression patterns

In both cases, the information will be linked with experiment metadata
about species and specimen sample sources, disease states, and
perturbation responses.

Furthermore, in order to maximize the interoperability of this derived
knowledge with other sources of knowledge about genes, pathways,
diseases, and drugs, the information will be in the form of
standardized semantically-structured assertions of
subject-predicate-object triple statements that will be compatible
with storage using semantic web technologies (e.g., RDF, OWL) and
graph database (e.g., ArangoDB) platforms.

* Goals

As a beginning step of the pilot, this document describes use of
Python to demonstrate both envisioned knowledge streams, and
simplified use of a graph database for visualization. In particular,
goals of this document include:

+ Identification of CELLxGENE datasets and their citations within
  PubMed (See [[file:Chapter-01-CELLxGENE.ipynb][Chapter-01-CELLxGENE.ipynb]])

+ Use of package NSForest for the discovery of minimum marker gene
  combinations for cell type identification from single-cell RNA
  sequencing data (See [[file:Chapter-02-NSForest.ipynb][Chapter-02-NSforest.ipynb]])

+ Use of package OntoGPT for extracting structured information from
  text with large language models (LLMs), instruction prompts, and
  ontology-based grounding (See [[file:Chapter-03-OntoGPT.ipynb][Chapter-03-ontoGPT.ipynb]])

+ Creation, population, and display of the processing results using
  graph database ArangoDB (See [[file:Chapter-04-ArangoDB.ipynb][Chapter-04-ArangoDB.ipynb]])

* Development environment

A development environment requires a few environment variables, as
well as a virtual environment containing Python dependencies.

** Environment variables

Accessing PubMed without limit requires creating an [[https://ncbiinsights.ncbi.nlm.nih.gov/2017/11/02/new-api-keys-for-the-e-utilities/][API key]] associated
with the email address of an NCBI account. Running OntoGPT requires
creating and funding an [[https://openai.com/api/][OpenAI platform]] account, configuring a [[https://platform.openai.com/api-keys][project
API key]] , and creating a [[https://bioportal.bioontology.org/login][BioPortal]] account to be assigned an API
key.

Since these keys should not be made public, this demonstration assigns
them to environment variables in a ~.zshenv~ file as follows:

#+begin_src zsh
  export BIOPORTAL_API_KEY=<YOUR_BIOPORTAL_API_KEY>
  export OPENAI_API_KEY=<YOUR_OPENAI_API_KEY>
  export NCBI_EMAIL=<YOUR_NCBI_EMAIL>
  export NCBI_API_KEY=<YOUR_NCBI_API_KEY>
#+end_src

This file must be created and sourced prior to running this
demonstration. Do not commit this file to the repository.

** Python dependencies

This demonstration uses [[https://python-poetry.org/][Poetry]] to manage dependencies. Poetry was
installed in its own virtual environment following the recommended
(manual) approach as follows

#+begin_src zsh
  python -m venv .poetry
  source .poetry/bin/activate
  python -m pip install -i .poetry.txt
  deactivate
#+end_src

Then the dependencies specified in the ~pyproject.toml~ file in the
root directory of this repository were installed as follows:

#+begin_src zsh
  python -m venv .venv
  source .venv/bin/activate
  .poetry/bin/poetry install
#+end_src
